[user]
  name = Shannon Bertucci
  email = hello@shannon.io

[push]
  default = simple

[alias]
  st = status
  ci = commit
  a = commit --amend --no-edit
  co = checkout
  cl = !git add . && git stash && git st
  fu = reset --hard
  sa = submodule add
  sb = shortlog -s -n --all
  lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
  ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
  yep = !git pull --rebase && git remote prune origin
  yolo = push --force-with-lease
  scout = !git for-each-ref --sort=committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'
  standup = !git lg --since='yesterday' --author=`git config user.email`
  su = !git standup
  pr = "!f() { git rev-parse --abbrev-ref HEAD | chrome https://github.com/JuulLabs/juulio/compare/${1}?expand=1; }; f"
  publish = !git push --set-upstream origin $(git rev-parse --abbrev-ref HEAD)
  push-first = !git rev-parse --abbrev-ref HEAD | git push -u origin ${1}
  expunge = !git branch --merged master | grep -v 'master$' | xargs git branch -d
  done = "!f() { git co -b $1 && git add . --all && git commit -m $2 && git push -u origin $1 && hub pull-request -m $2; }; f"
  accept-ours = "!f() { files=\"$@\"; [ -z $files ] && files='.'; git checkout --ours -- $files; git add -u $files; }; f"
  accept-theirs = "!f() { files=\"$@\"; [ -z $files ] && files='.'; git checkout --theirs -- $files; git add -u $files; }; f"
  ignore = update-index --assume-unchanged
  unignore = update-index --no-assume-unchanged
  ignored = !git ls-files -v | grep "^[[:lower:]]"
  wip = commit -am "WIP" --no-verify
  bd = branch -D
  ff = "!f() { git commit --fixup=`git l -l 10 | fzy | cut -f2 -d ' '`; }; f"
  wipe = !git pull -r && git fetch && git prune && git expunge

[core]
  editor = nvim
  excludesfile = /Users/shannon/.gitignore
[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true
